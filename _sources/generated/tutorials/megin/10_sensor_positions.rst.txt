
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "generated/tutorials/megin/10_sensor_positions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_generated_tutorials_megin_10_sensor_positions.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_generated_tutorials_megin_10_sensor_positions.py:


.. _tut-sensor-positions:

Sensor positions
================

.. important::

    This example requires the ``meg_wiki`` package to download the sample dataset. This
    package can be installed with ``pip``:

    .. code-block:: bash

        $ pip install git+https://github.com/fcbg-platforms/meg-wiki

The sensor position is defined for each sensors as an `~numpy.array` of 12 elements.
This array represents the position and the normal given by a ``(3, 3)`` rotation matrix,
in device coordinates.

.. GENERATED FROM PYTHON SOURCE LINES 20-39

.. code-block:: Python


    import numpy as np
    from matplotlib import pyplot as plt
    from mne import pick_info, set_log_level
    from mne._fiff.pick import _picks_to_idx  # handy private function for selection
    from mne.channels import read_layout
    from mne.io import read_info
    from mne.transforms import Transform
    from mne.viz import plot_alignment, plot_sensors, set_3d_view
    from mne.viz.backends.renderer import create_3d_figure

    from meg_wiki.datasets import sample

    set_log_level("WARNING")
    info = read_info(
        sample.data_path() / "meas_info" / "measurement-info.fif", verbose=False
    )
    info






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <script type="text/javascript">
        const toggleVisibility = (className) => {

      const elements = document.querySelectorAll(`.${className}`)

      elements.forEach(element => {
        if (element.classList.contains('repr-section-header')) {
          // Don't collapse the section header row.
           return
        }
        if (element.classList.contains('repr-element-collapsed')) {
          // Force a reflow to ensure the display change takes effect before removing the class
          element.classList.remove('repr-element-collapsed')
          element.offsetHeight // This forces the browser to recalculate layout
          element.classList.remove('repr-element-faded')
        } else {
          // Start transition to hide the element
          element.classList.add('repr-element-faded')
          element.addEventListener('transitionend', handler = (e) => {
            if (e.propertyName === 'opacity' && getComputedStyle(element).opacity === '0.2') {
              element.classList.add('repr-element-collapsed')
              element.removeEventListener('transitionend', handler)
            }
          });
        }
      });

      // Take care of button (adjust caret)
      const button = document.querySelectorAll(`.repr-section-header.${className} > th.repr-section-toggle-col > button`)[0]
      button.classList.toggle('collapsed')

      // Take care of the tooltip of the section header row
      const sectionHeaderRow = document.querySelectorAll(`tr.repr-section-header.${className}`)[0]
      sectionHeaderRow.classList.toggle('collapsed')
      sectionHeaderRow.title = sectionHeaderRow.title === 'Hide section' ? 'Show section' : 'Hide section'
    }
    </script>

    <style type="text/css">
        table.repr.table.table-hover.table-striped.table-sm.table-responsive.small {
      /* Don't make rows wider than they need to be. */
      display: inline;
    }

    table > tbody > tr.repr-element > td {
      /* Apply a tighter layout to the table cells. */
      padding-top: 0.1rem;
      padding-bottom: 0.1rem;
      padding-right: 1rem;
    }

    table > tbody > tr > td.repr-section-toggle-col {
      /* Remove background and border of the first cell in every row
         (this row is only used for the collapse / uncollapse caret)

         TODO: Need to find a good solution for VS Code that works in both
               light and dark mode. */
      border-color: transparent;
      --bs-table-accent-bg: transparent;
    }

    tr.repr-section-header {
      /* Remove stripes from section header rows */
      background-color: transparent;
      border-color: transparent;
      --bs-table-striped-bg: transparent;
      cursor: pointer;
    }

    tr.repr-section-header > th {
      text-align: left !important;
      vertical-align: middle;
    }

    .repr-element, tr.repr-element > td {
      opacity: 1;
      text-align: left !important;
    }

    .repr-element-faded {
      transition: 0.3s ease;
      opacity: 0.2;
    }

    .repr-element-collapsed {
      display: none;
    }

    /* Collapse / uncollapse button and the caret it contains. */
    .repr-section-toggle-col button {
      cursor: pointer;
      width: 1rem;
      background-color: transparent;
      border-color: transparent;
    }

    span.collapse-uncollapse-caret {
      width: 1rem;
      height: 1rem;
      display: block;
      background-repeat: no-repeat;
      background-position: left;
      background-size: contain;
    }

    /* The collapse / uncollapse carets were copied from the free Font Awesome collection and adjusted. */

    /* Default to black carets for light mode */
    .repr-section-toggle-col > button.collapsed > span.collapse-uncollapse-caret {
      background-image: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="black" d="M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z"/></svg>');
    }

    .repr-section-toggle-col
      > button:not(.collapsed)
      > span.collapse-uncollapse-caret {
      background-image: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="black" d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>');
    }

    /* Use white carets for dark mode */
    @media (prefers-color-scheme: dark) {
      .repr-section-toggle-col > button.collapsed > span.collapse-uncollapse-caret {
        background-image: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="white" d="M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z"/></svg>');
      }

      .repr-section-toggle-col
        > button:not(.collapsed)
        > span.collapse-uncollapse-caret {
        background-image: url('data:image/svg+xml;charset=utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="white" d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>');
      }
    }

    .channel-names-btn {
      padding: 0;
      border: none;
      background: none;
      text-decoration: underline;
      text-decoration-style: dashed;
      cursor: pointer;
      color: #0d6efd;
    }

    .channel-names-btn:hover {
      color: #0a58ca;
    }
    </style>



    <table class="repr table table-hover table-striped table-sm table-responsive small">
    







    <tr class="repr-section-header general-4558ba07-5a26-4ecd-81c7-a733a041ae2b"  title="Hide section" 
        onclick="toggleVisibility('general-4558ba07-5a26-4ecd-81c7-a733a041ae2b')">
        <th class="repr-section-toggle-col">
            <button>
            
                <span class="collapse-uncollapse-caret"></span>
            </button>
        </th>
        <th colspan="2">
            <strong>General</strong>
        </th>
    </tr>

    <tr class="repr-element general-4558ba07-5a26-4ecd-81c7-a733a041ae2b ">
        <td class="repr-section-toggle-col"></td>
        <td>MNE object type</td>
        <td>Info</td>
    </tr>
    <tr class="repr-element general-4558ba07-5a26-4ecd-81c7-a733a041ae2b ">
        <td class="repr-section-toggle-col"></td>
        <td>Measurement date</td>
    
        <td>2000-01-01 at 00:00:00 UTC</td>
    
    </tr>
    <tr class="repr-element general-4558ba07-5a26-4ecd-81c7-a733a041ae2b ">
        <td class="repr-section-toggle-col"></td>
        <td>Participant</td>
    
    
    
    </tr>
    <tr class="repr-element general-4558ba07-5a26-4ecd-81c7-a733a041ae2b ">
        <td class="repr-section-toggle-col"></td>
        <td>Experimenter</td>
    
        <td>mne_anonymize</td>
    
    </tr>
    







    <tr class="repr-section-header acquisition-85f964ef-dac8-4e94-86f4-17dcf2d56fa9" 
        title="Hide section"  onclick="toggleVisibility('acquisition-85f964ef-dac8-4e94-86f4-17dcf2d56fa9')">
        <th class="repr-section-toggle-col">
            <button>
            
                <span class="collapse-uncollapse-caret"></span>
            </button>
        </th>
        <th colspan="2">
            <strong>Acquisition</strong>
        </th>
    </tr>








    <tr class="repr-element acquisition-85f964ef-dac8-4e94-86f4-17dcf2d56fa9 ">
        <td class="repr-section-toggle-col"></td>
        <td>Sampling frequency</td>
        <td>1000.00 Hz</td>
    </tr>



    







    <tr class="repr-section-header channels-a90e1243-c9a4-4433-a4e3-b692dbbee60b"  title="Hide section" 
        onclick="toggleVisibility('channels-a90e1243-c9a4-4433-a4e3-b692dbbee60b')">
        <th class="repr-section-toggle-col">
            <button>
            
                <span class="collapse-uncollapse-caret"></span>
            </button>
        </th>
        <th colspan="2">
            <strong>Channels</strong>
        </th>
    </tr>


    <tr class="repr-element channels-a90e1243-c9a4-4433-a4e3-b692dbbee60b ">
        <td class="repr-section-toggle-col"></td>
        <td>Magnetometers</td>
        <td>
            <button class="channel-names-btn" onclick="alert('Good Magnetometers:\n\nMEG0111, MEG0121, MEG0131, MEG0141, MEG0211, MEG0221, MEG0231, MEG0241, MEG0311, MEG0321, MEG0331, MEG0341, MEG0411, MEG0421, MEG0431, MEG0441, MEG0511, MEG0521, MEG0531, MEG0541, MEG0611, MEG0621, MEG0631, MEG0641, MEG0711, MEG0721, MEG0731, MEG0741, MEG0811, MEG0821, MEG0911, MEG0921, MEG0931, MEG0941, MEG1011, MEG1021, MEG1031, MEG1041, MEG1111, MEG1121, MEG1131, MEG1141, MEG1211, MEG1221, MEG1231, MEG1241, MEG1311, MEG1321, MEG1331, MEG1341, MEG1411, MEG1421, MEG1431, MEG1441, MEG1511, MEG1521, MEG1531, MEG1541, MEG1611, MEG1621, MEG1631, MEG1641, MEG1711, MEG1721, MEG1731, MEG1741, MEG1811, MEG1821, MEG1831, MEG1841, MEG1911, MEG1921, MEG1931, MEG1941, MEG2011, MEG2021, MEG2031, MEG2041, MEG2111, MEG2121, MEG2131, MEG2141, MEG2211, MEG2221, MEG2231, MEG2241, MEG2311, MEG2321, MEG2331, MEG2341, MEG2411, MEG2421, MEG2431, MEG2441, MEG2511, MEG2521, MEG2531, MEG2541, MEG2611, MEG2621, MEG2631, MEG2641')" title="(Click to open in popup)&#13;&#13;MEG0111, MEG0121, MEG0131, MEG0141, MEG0211, MEG0221, MEG0231, MEG0241, MEG0311, MEG0321, MEG0331, MEG0341, MEG0411, MEG0421, MEG0431, MEG0441, MEG0511, MEG0521, MEG0531, MEG0541, MEG0611, MEG0621, MEG0631, MEG0641, MEG0711, MEG0721, MEG0731, MEG0741, MEG0811, MEG0821, MEG0911, MEG0921, MEG0931, MEG0941, MEG1011, MEG1021, MEG1031, MEG1041, MEG1111, MEG1121, MEG1131, MEG1141, MEG1211, MEG1221, MEG1231, MEG1241, MEG1311, MEG1321, MEG1331, MEG1341, MEG1411, MEG1421, MEG1431, MEG1441, MEG1511, MEG1521, MEG1531, MEG1541, MEG1611, MEG1621, MEG1631, MEG1641, MEG1711, MEG1721, MEG1731, MEG1741, MEG1811, MEG1821, MEG1831, MEG1841, MEG1911, MEG1921, MEG1931, MEG1941, MEG2011, MEG2021, MEG2031, MEG2041, MEG2111, MEG2121, MEG2131, MEG2141, MEG2211, MEG2221, MEG2231, MEG2241, MEG2311, MEG2321, MEG2331, MEG2341, MEG2411, MEG2421, MEG2431, MEG2441, MEG2511, MEG2521, MEG2531, MEG2541, MEG2611, MEG2621, MEG2631, MEG2641">
                102
            </button>

        
        </td>
    </tr>


    <tr class="repr-element channels-a90e1243-c9a4-4433-a4e3-b692dbbee60b ">
        <td class="repr-section-toggle-col"></td>
        <td>Gradiometers</td>
        <td>
            <button class="channel-names-btn" onclick="alert('Good Gradiometers:\n\nMEG0112, MEG0113, MEG0122, MEG0123, MEG0132, MEG0133, MEG0142, MEG0143, MEG0212, MEG0213, MEG0222, MEG0223, MEG0232, MEG0233, MEG0242, MEG0243, MEG0312, MEG0313, MEG0322, MEG0323, MEG0332, MEG0333, MEG0342, MEG0343, MEG0412, MEG0413, MEG0422, MEG0423, MEG0432, MEG0433, MEG0442, MEG0443, MEG0512, MEG0513, MEG0522, MEG0523, MEG0532, MEG0533, MEG0542, MEG0543, MEG0612, MEG0613, MEG0622, MEG0623, MEG0632, MEG0633, MEG0642, MEG0643, MEG0712, MEG0713, MEG0722, MEG0723, MEG0732, MEG0733, MEG0742, MEG0743, MEG0812, MEG0813, MEG0822, MEG0823, MEG0912, MEG0913, MEG0922, MEG0923, MEG0932, MEG0933, MEG0942, MEG0943, MEG1012, MEG1013, MEG1022, MEG1023, MEG1032, MEG1033, MEG1042, MEG1043, MEG1112, MEG1113, MEG1122, MEG1123, MEG1132, MEG1133, MEG1142, MEG1143, MEG1212, MEG1213, MEG1222, MEG1223, MEG1232, MEG1233, MEG1242, MEG1243, MEG1312, MEG1313, MEG1322, MEG1323, MEG1332, MEG1333, MEG1342, MEG1343, MEG1412, MEG1413, MEG1422, MEG1423, MEG1432, MEG1433, MEG1442, MEG1443, MEG1512, MEG1513, MEG1522, MEG1523, MEG1532, MEG1533, MEG1542, MEG1543, MEG1612, MEG1613, MEG1622, MEG1623, MEG1632, MEG1633, MEG1642, MEG1643, MEG1712, MEG1713, MEG1722, MEG1723, MEG1732, MEG1733, MEG1742, MEG1743, MEG1812, MEG1813, MEG1822, MEG1823, MEG1832, MEG1833, MEG1842, MEG1843, MEG1912, MEG1913, MEG1922, MEG1923, MEG1932, MEG1933, MEG1942, MEG1943, MEG2012, MEG2013, MEG2022, MEG2023, MEG2032, MEG2033, MEG2042, MEG2043, MEG2112, MEG2113, MEG2122, MEG2123, MEG2132, MEG2133, MEG2142, MEG2143, MEG2212, MEG2213, MEG2222, MEG2223, MEG2232, MEG2233, MEG2242, MEG2243, MEG2312, MEG2313, MEG2322, MEG2323, MEG2332, MEG2333, MEG2342, MEG2343, MEG2412, MEG2413, MEG2422, MEG2423, MEG2432, MEG2433, MEG2442, MEG2443, MEG2512, MEG2513, MEG2522, MEG2523, MEG2532, MEG2533, MEG2542, MEG2543, MEG2612, MEG2613, MEG2622, MEG2623, MEG2632, MEG2633, MEG2642, MEG2643')" title="(Click to open in popup)&#13;&#13;MEG0112, MEG0113, MEG0122, MEG0123, MEG0132, MEG0133, MEG0142, MEG0143, MEG0212, MEG0213, MEG0222, MEG0223, MEG0232, MEG0233, MEG0242, MEG0243, MEG0312, MEG0313, MEG0322, MEG0323, MEG0332, MEG0333, MEG0342, MEG0343, MEG0412, MEG0413, MEG0422, MEG0423, MEG0432, MEG0433, MEG0442, MEG0443, MEG0512, MEG0513, MEG0522, MEG0523, MEG0532, MEG0533, MEG0542, MEG0543, MEG0612, MEG0613, MEG0622, MEG0623, MEG0632, MEG0633, MEG0642, MEG0643, MEG0712, MEG0713, MEG0722, MEG0723, MEG0732, MEG0733, MEG0742, MEG0743, MEG0812, MEG0813, MEG0822, MEG0823, MEG0912, MEG0913, MEG0922, MEG0923, MEG0932, MEG0933, MEG0942, MEG0943, MEG1012, MEG1013, MEG1022, MEG1023, MEG1032, MEG1033, MEG1042, MEG1043, MEG1112, MEG1113, MEG1122, MEG1123, MEG1132, MEG1133, MEG1142, MEG1143, MEG1212, MEG1213, MEG1222, MEG1223, MEG1232, MEG1233, MEG1242, MEG1243, MEG1312, MEG1313, MEG1322, MEG1323, MEG1332, MEG1333, MEG1342, MEG1343, MEG1412, MEG1413, MEG1422, MEG1423, MEG1432, MEG1433, MEG1442, MEG1443, MEG1512, MEG1513, MEG1522, MEG1523, MEG1532, MEG1533, MEG1542, MEG1543, MEG1612, MEG1613, MEG1622, MEG1623, MEG1632, MEG1633, MEG1642, MEG1643, MEG1712, MEG1713, MEG1722, MEG1723, MEG1732, MEG1733, MEG1742, MEG1743, MEG1812, MEG1813, MEG1822, MEG1823, MEG1832, MEG1833, MEG1842, MEG1843, MEG1912, MEG1913, MEG1922, MEG1923, MEG1932, MEG1933, MEG1942, MEG1943, MEG2012, MEG2013, MEG2022, MEG2023, MEG2032, MEG2033, MEG2042, MEG2043, MEG2112, MEG2113, MEG2122, MEG2123, MEG2132, MEG2133, MEG2142, MEG2143, MEG2212, MEG2213, MEG2222, MEG2223, MEG2232, MEG2233, MEG2242, MEG2243, MEG2312, MEG2313, MEG2322, MEG2323, MEG2332, MEG2333, MEG2342, MEG2343, MEG2412, MEG2413, MEG2422, MEG2423, MEG2432, MEG2433, MEG2442, MEG2443, MEG2512, MEG2513, MEG2522, MEG2523, MEG2532, MEG2533, MEG2542, MEG2543, MEG2612, MEG2613, MEG2622, MEG2623, MEG2632, MEG2633, MEG2642, MEG2643">
                204
            </button>

        
        </td>
    </tr>


    <tr class="repr-element channels-a90e1243-c9a4-4433-a4e3-b692dbbee60b ">
        <td class="repr-section-toggle-col"></td>
        <td>Head & sensor digitization</td>
    
        <td>Not available</td>
    
    </tr>
    







    <tr class="repr-section-header filters-94300ddf-40e3-4595-9972-c1f2864c98c3"  title="Hide section" 
        onclick="toggleVisibility('filters-94300ddf-40e3-4595-9972-c1f2864c98c3')">
        <th class="repr-section-toggle-col">
            <button>
            
                <span class="collapse-uncollapse-caret"></span>
            </button>
        </th>
        <th colspan="2">
            <strong>Filters</strong>
        </th>
    </tr>

    <tr class="repr-element filters-94300ddf-40e3-4595-9972-c1f2864c98c3 ">
        <td class="repr-section-toggle-col"></td>
        <td>Highpass</td>
        <td>0.10 Hz</td>
    </tr>


    <tr class="repr-element filters-94300ddf-40e3-4595-9972-c1f2864c98c3 ">
        <td class="repr-section-toggle-col"></td>
        <td>Lowpass</td>
        <td>330.00 Hz</td>
    </tr>


    <tr class="repr-element filters-94300ddf-40e3-4595-9972-c1f2864c98c3 ">
        <td class="repr-section-toggle-col"></td>
        <td>Projections</td>
        <td>
        
            ssp_68_magn.fif : PCA-v1 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v2 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v3 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v4 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v5 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v6 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v1 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v2 (off)
            <br />
        
            ssp_68_magn.fif : PCA-v3 (off)
            <br />
        
            ssp_68_grad.fif : PCA-v1 (off)
            <br />
        
            ssp_68_grad.fif : PCA-v2 (off)
            <br />
        
            ssp_68_grad.fif : PCA-v3 (off)
            <br />
        
            ssp_68_grad.fif : PCA-v1 (off)
            <br />
        
            ssp_68_grad.fif : PCA-v2 (off)
        
        
        </td>
    </tr>

    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-41

In MNE-Python, the sensor position is stored under the key ``loc`` for every channels.

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: Python


    print(info["chs"][0]["loc"])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [-0.1066      0.0464     -0.0604     -0.0127      0.0057     -0.99990302
     -0.186801   -0.98240298 -0.0033     -0.98232698  0.18674099  0.013541  ]




.. GENERATED FROM PYTHON SOURCE LINES 45-46

Along with other sensor information:

.. GENERATED FROM PYTHON SOURCE LINES 46-53

.. code-block:: Python


    for key, value in info["chs"][0].items():
        if key == "loc":
            print(f"{key}:\n  Position:\n{value[:3]}\n  Normal:\n{value[3:].reshape(3, 3)}")
        else:
            print(f"{key}: {value}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    scanno: 1
    logno: 111
    kind: 1 (FIFFV_MEG_CH)
    range: 1.0
    cal: 1.329999999022391e-10
    coil_type: 3024 (FIFFV_COIL_VV_MAG_T3)
    loc:
      Position:
    [-0.1066  0.0464 -0.0604]
      Normal:
    [[-0.0127      0.0057     -0.99990302]
     [-0.186801   -0.98240298 -0.0033    ]
     [-0.98232698  0.18674099  0.013541  ]]
    unit: 112 (FIFF_UNIT_T)
    unit_mul: 0 (FIFF_UNITM_NONE)
    ch_name: MEG0111
    coord_frame: 1 (FIFFV_COORD_DEVICE)




.. GENERATED FROM PYTHON SOURCE LINES 54-57

The sensors can be visualized on a 3D plot. This measurement information was taken
from an empty-room recording. Thus, it does not contain an HPI measurement and it does
not contain the transform from the device to the head coordinate frame.

.. GENERATED FROM PYTHON SOURCE LINES 57-65

.. code-block:: Python


    # set an identity transformation from the device to head coordinates
    info["dev_head_t"] = Transform("meg", "head")
    ax = plt.axes(projection="3d")
    plot_sensors(info, kind="3d", axes=ax)
    ax.view_init(azim=130, elev=20)
    plt.show()




.. image-sg:: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_001.png
   :alt: 10 sensor positions
   :srcset: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 66-71

The 3D coordinates can be projected on a 2D plane to represent a topographic view of
the sensor array. In MNE, a :class:`~mne.channels.Layout` object is used to represent
the idealied 2D sensor positions. Built-in layouts are available for the MEGIN system,
under the keys ``'Vectorview-all'``, ``'Vectorview-mag'``, ``'Vectorview-grad'``, and
``'Vectorview-grad_norm'``.

.. GENERATED FROM PYTHON SOURCE LINES 71-92

.. code-block:: Python


    layout = read_layout("Vectorview-all")
    fig, ax = plt.subplots(1, 1, figsize=(16.53, 11.69), layout="constrained")
    ax.set(xticks=[], yticks=[], aspect="equal")
    outlines = dict(border=([0, 1, 1, 0, 0], [0, 0, 1, 1, 0]))
    for p, ch_name in zip(layout.pos, layout.names, strict=True):
        center_pos = np.array((p[0] + p[2] / 2.0, p[1] + p[3] / 2.0))
        ch_name = ch_name.split("MEG")[1]
        ch_name = f"MAG\n{ch_name}" if ch_name.endswith("1") else f"GRAD\n{ch_name}"
        ax.annotate(
            ch_name,
            xy=center_pos,
            horizontalalignment="center",
            verticalalignment="center",
            size=6,
        )
        x1, x2, y1, y2 = p[0], p[0] + p[2], p[1], p[1] + p[3]
        ax.plot([x1, x1, x2, x2, x1], [y1, y2, y2, y1, y1], color="k")
    ax.axis("off")
    plt.show()




.. image-sg:: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_002.png
   :alt: 10 sensor positions
   :srcset: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 93-123

.. tip::

   The function :func:`mne.viz.plot_layout` or the method
   :meth:`mne.channels.Layout.plot` can be used to plot the layout with fewer lines
   of code but without customization. For instance:

   .. code-block:: python

       from mne.channels import read_layout

       layout = read_layout("Vectorview-all")
       layout.plot()

If you pay attention to the plotted layout, you will notice that triplets of sensors
are represented sometimes with ``GRADXXX2`` on top and ``GRADXXX3`` on the bottom, and
sometimes the other way around. This is because the sensors are not all oriented in
the same direction. The sensor in the top box measures the derivative along the
latitude while the sensor in the bottom box measures the derivative along the
longitude.

.. figure:: ../../../_static/meg/meg-channel-naming-convention.png
    :align: center
    :alt: MEG channel naming convention

    Figure taken from MEGIN's User's Manual (copyright ©2011-2019 MEGIN Oy).

We can visualize the orientation in 3D, with the sensors oriented along the lines of
latitude (horizontal sensitivity along the equator) in **red** and the sensors
oriented along the lines of longitude (vertical sensitivity along the equator) in
**orange**.

.. GENERATED FROM PYTHON SOURCE LINES 123-157

.. code-block:: Python


    picks = _picks_to_idx(info, picks="grad")
    info = pick_info(info, picks, copy=False)
    mask_top = np.zeros(len(info.ch_names), bool)
    for k, (ch2, ch3) in enumerate(
        zip(info.ch_names[::2], info.ch_names[1::2], strict=True)
    ):
        # ch2 ends with MEGxxx2 and ch3 ends with MEGxxx3
        idx2 = np.where(np.array(layout.names) == f"MEG {ch2.split('MEG')[1]}")[0]
        idx3 = np.where(np.array(layout.names) == f"MEG {ch3.split('MEG')[1]}")[0]
        mask_top[2 * k : 2 * k + 2] = (
            [True, False]
            if layout.pos[:, 1][idx2[0]] > layout.pos[:, 1][idx3[0]]
            else [False, True]
        )
    mask_bottom = ~mask_top  # opposite

    # retrieve position and orientation in device coordinate frame
    pos = np.array([ch["loc"][:3] for ch in info["chs"]])
    ori = np.array([ch["loc"][3:6] for ch in info["chs"]])

    # create render
    renderer_kwargs = dict(bgcolor="w")
    renderer = create_3d_figure(
        size=(800, 800),
        scene=False,
        bgcolor="w",
    )
    plot_alignment(info, meg="sensors", coord_frame="meg", fig=renderer.scene())
    renderer.quiver3d(*pos[mask_top].T, *ori[mask_top].T, "r", scale=0.015, mode="arrow")
    renderer.quiver3d(
        *pos[mask_bottom].T, *ori[mask_bottom].T, "orange", scale=0.015, mode="arrow"
    )
    set_3d_view(renderer.figure, azimuth=55, elevation=70, distance=0.55)



.. image-sg:: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_003.png
   :alt: 10 sensor positions
   :srcset: /generated/tutorials/megin/images/sphx_glr_10_sensor_positions_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 5.165 seconds)

**Estimated memory usage:**  418 MB


.. _sphx_glr_download_generated_tutorials_megin_10_sensor_positions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 10_sensor_positions.ipynb <10_sensor_positions.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 10_sensor_positions.py <10_sensor_positions.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 10_sensor_positions.zip <10_sensor_positions.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
